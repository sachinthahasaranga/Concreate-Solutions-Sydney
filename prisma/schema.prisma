// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma
// Learn more: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement())
  email        String     @unique
  username     String     @unique
  passwordHash String
  isActive     Boolean    @default(true)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  roles        UserRole[]
  posts        Post[]

  @@index([email])
  @@index([username])
}

model Role {
  id          Int        @id @default(autoincrement())
  name        String     @unique //  "admin", "user"
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  users       UserRole[]
}

model UserRole {
  userId     Int
  roleId     Int
  assignedAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@id([userId, roleId]) 
  @@index([userId])
  @@index([roleId])
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  slug        String    @unique
  imageUrl    String?
  description String
  content     String
  publishedAt DateTime  @default(now())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  authorId Int?
  author   User?     @relation(fields: [authorId], references: [id])

  @@index([publishedAt])
  @@index([authorId])
}

